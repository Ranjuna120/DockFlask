"""Add category support to posts

Revision ID: 4ba37017bf1b
Revises: 
Create Date: 2025-07-25 12:59:09.465988

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision = '4ba37017bf1b'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('app_settings', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('idx_key_name'))
        batch_op.drop_index(batch_op.f('key_name'))

    op.drop_table('app_settings')
    with op.batch_alter_table('post_categories', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('idx_category_id'))
        batch_op.drop_index(batch_op.f('idx_post_id'))
        batch_op.drop_index(batch_op.f('unique_post_category'))

    op.drop_table('post_categories')
    with op.batch_alter_table('user_sessions', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('idx_active'))
        batch_op.drop_index(batch_op.f('idx_created_at'))
        batch_op.drop_index(batch_op.f('idx_expires_at'))
        batch_op.drop_index(batch_op.f('idx_user_id'))

    op.drop_table('user_sessions')
    with op.batch_alter_table('comments', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('idx_approved'))
        batch_op.drop_index(batch_op.f('idx_created_at'))
        batch_op.drop_index(batch_op.f('idx_parent_id'))
        batch_op.drop_index(batch_op.f('idx_post_id'))
        batch_op.drop_index(batch_op.f('idx_user_id'))

    op.drop_table('comments')
    with op.batch_alter_table('categories', schema=None) as batch_op:
        batch_op.alter_column('name',
               existing_type=mysql.VARCHAR(collation='utf8mb4_unicode_ci', length=100),
               type_=sa.String(length=50),
               existing_nullable=False)
        batch_op.alter_column('description',
               existing_type=mysql.TEXT(collation='utf8mb4_unicode_ci'),
               type_=sa.String(length=200),
               existing_nullable=True)
        batch_op.alter_column('created_at',
               existing_type=mysql.TIMESTAMP(),
               type_=sa.DateTime(),
               existing_nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
        batch_op.drop_index(batch_op.f('idx_name'))
        batch_op.drop_index(batch_op.f('idx_slug'))
        batch_op.drop_index(batch_op.f('slug'))
        batch_op.drop_column('slug')

    with op.batch_alter_table('posts', schema=None) as batch_op:
        batch_op.add_column(sa.Column('category_id', sa.Integer(), nullable=True))
        batch_op.alter_column('created_at',
               existing_type=mysql.TIMESTAMP(),
               type_=sa.DateTime(),
               existing_nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
        batch_op.alter_column('updated_at',
               existing_type=mysql.TIMESTAMP(),
               type_=sa.DateTime(),
               existing_nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP'))
        batch_op.drop_index(batch_op.f('idx_created_at'))
        batch_op.drop_index(batch_op.f('idx_published'))
        batch_op.drop_index(batch_op.f('idx_title'))
        batch_op.drop_index(batch_op.f('idx_user_id'))
        batch_op.drop_index(batch_op.f('idx_views'))
        batch_op.drop_constraint(batch_op.f('fk_posts_user_id'), type_='foreignkey')
        batch_op.create_foreign_key(None, 'users', ['user_id'], ['id'])
        batch_op.create_foreign_key(None, 'categories', ['category_id'], ['id'])

    with op.batch_alter_table('system_logs', schema=None) as batch_op:
        batch_op.alter_column('timestamp',
               existing_type=mysql.TIMESTAMP(),
               type_=sa.DateTime(),
               existing_nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
        batch_op.drop_index(batch_op.f('idx_action'))
        batch_op.drop_index(batch_op.f('idx_ip_address'))
        batch_op.drop_index(batch_op.f('idx_timestamp'))
        batch_op.drop_index(batch_op.f('idx_user_id'))
        batch_op.drop_constraint(batch_op.f('fk_system_logs_user_id'), type_='foreignkey')
        batch_op.create_foreign_key(None, 'users', ['user_id'], ['id'])

    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.alter_column('created_at',
               existing_type=mysql.TIMESTAMP(),
               type_=sa.DateTime(),
               existing_nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
        batch_op.alter_column('last_login',
               existing_type=mysql.TIMESTAMP(),
               type_=sa.DateTime(),
               existing_nullable=True)
        batch_op.drop_index(batch_op.f('idx_active'))
        batch_op.drop_index(batch_op.f('idx_admin'))
        batch_op.drop_index(batch_op.f('idx_created_at'))
        batch_op.drop_index(batch_op.f('idx_email'))
        batch_op.drop_index(batch_op.f('idx_username'))

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('idx_username'), ['username'], unique=False)
        batch_op.create_index(batch_op.f('idx_email'), ['email'], unique=False)
        batch_op.create_index(batch_op.f('idx_created_at'), ['created_at'], unique=False)
        batch_op.create_index(batch_op.f('idx_admin'), ['is_admin'], unique=False)
        batch_op.create_index(batch_op.f('idx_active'), ['is_active'], unique=False)
        batch_op.alter_column('last_login',
               existing_type=sa.DateTime(),
               type_=mysql.TIMESTAMP(),
               existing_nullable=True)
        batch_op.alter_column('created_at',
               existing_type=sa.DateTime(),
               type_=mysql.TIMESTAMP(),
               existing_nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))

    with op.batch_alter_table('system_logs', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key(batch_op.f('fk_system_logs_user_id'), 'users', ['user_id'], ['id'], onupdate='CASCADE', ondelete='SET NULL')
        batch_op.create_index(batch_op.f('idx_user_id'), ['user_id'], unique=False)
        batch_op.create_index(batch_op.f('idx_timestamp'), ['timestamp'], unique=False)
        batch_op.create_index(batch_op.f('idx_ip_address'), ['ip_address'], unique=False)
        batch_op.create_index(batch_op.f('idx_action'), ['action'], unique=False)
        batch_op.alter_column('timestamp',
               existing_type=sa.DateTime(),
               type_=mysql.TIMESTAMP(),
               existing_nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))

    with op.batch_alter_table('posts', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key(batch_op.f('fk_posts_user_id'), 'users', ['user_id'], ['id'], onupdate='CASCADE', ondelete='CASCADE')
        batch_op.create_index(batch_op.f('idx_views'), ['views'], unique=False)
        batch_op.create_index(batch_op.f('idx_user_id'), ['user_id'], unique=False)
        batch_op.create_index(batch_op.f('idx_title'), ['title'], unique=False)
        batch_op.create_index(batch_op.f('idx_published'), ['is_published'], unique=False)
        batch_op.create_index(batch_op.f('idx_created_at'), ['created_at'], unique=False)
        batch_op.alter_column('updated_at',
               existing_type=sa.DateTime(),
               type_=mysql.TIMESTAMP(),
               existing_nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP'))
        batch_op.alter_column('created_at',
               existing_type=sa.DateTime(),
               type_=mysql.TIMESTAMP(),
               existing_nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
        batch_op.drop_column('category_id')

    with op.batch_alter_table('categories', schema=None) as batch_op:
        batch_op.add_column(sa.Column('slug', mysql.VARCHAR(collation='utf8mb4_unicode_ci', length=100), nullable=False))
        batch_op.create_index(batch_op.f('slug'), ['slug'], unique=True)
        batch_op.create_index(batch_op.f('idx_slug'), ['slug'], unique=False)
        batch_op.create_index(batch_op.f('idx_name'), ['name'], unique=False)
        batch_op.alter_column('created_at',
               existing_type=sa.DateTime(),
               type_=mysql.TIMESTAMP(),
               existing_nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
        batch_op.alter_column('description',
               existing_type=sa.String(length=200),
               type_=mysql.TEXT(collation='utf8mb4_unicode_ci'),
               existing_nullable=True)
        batch_op.alter_column('name',
               existing_type=sa.String(length=50),
               type_=mysql.VARCHAR(collation='utf8mb4_unicode_ci', length=100),
               existing_nullable=False)

    op.create_table('comments',
    sa.Column('id', mysql.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('post_id', mysql.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('user_id', mysql.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('content', mysql.TEXT(collation='utf8mb4_unicode_ci'), nullable=False),
    sa.Column('created_at', mysql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True),
    sa.Column('updated_at', mysql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP'), nullable=True),
    sa.Column('is_approved', mysql.TINYINT(display_width=1), server_default=sa.text("'0'"), autoincrement=False, nullable=True),
    sa.Column('parent_id', mysql.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['parent_id'], ['comments.id'], name=op.f('fk_comments_parent_id'), onupdate='CASCADE', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['post_id'], ['posts.id'], name=op.f('fk_comments_post_id'), onupdate='CASCADE', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_comments_user_id'), onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    mysql_collate='utf8mb4_unicode_ci',
    mysql_default_charset='utf8mb4',
    mysql_engine='InnoDB'
    )
    with op.batch_alter_table('comments', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('idx_user_id'), ['user_id'], unique=False)
        batch_op.create_index(batch_op.f('idx_post_id'), ['post_id'], unique=False)
        batch_op.create_index(batch_op.f('idx_parent_id'), ['parent_id'], unique=False)
        batch_op.create_index(batch_op.f('idx_created_at'), ['created_at'], unique=False)
        batch_op.create_index(batch_op.f('idx_approved'), ['is_approved'], unique=False)

    op.create_table('user_sessions',
    sa.Column('id', mysql.VARCHAR(collation='utf8mb4_unicode_ci', length=255), nullable=False),
    sa.Column('user_id', mysql.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('ip_address', mysql.VARCHAR(collation='utf8mb4_unicode_ci', length=45), nullable=True),
    sa.Column('user_agent', mysql.TEXT(collation='utf8mb4_unicode_ci'), nullable=True),
    sa.Column('created_at', mysql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True),
    sa.Column('expires_at', mysql.TIMESTAMP(), nullable=False),
    sa.Column('is_active', mysql.TINYINT(display_width=1), server_default=sa.text("'1'"), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_user_sessions_user_id'), onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    mysql_collate='utf8mb4_unicode_ci',
    mysql_default_charset='utf8mb4',
    mysql_engine='InnoDB'
    )
    with op.batch_alter_table('user_sessions', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('idx_user_id'), ['user_id'], unique=False)
        batch_op.create_index(batch_op.f('idx_expires_at'), ['expires_at'], unique=False)
        batch_op.create_index(batch_op.f('idx_created_at'), ['created_at'], unique=False)
        batch_op.create_index(batch_op.f('idx_active'), ['is_active'], unique=False)

    op.create_table('post_categories',
    sa.Column('id', mysql.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('post_id', mysql.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('category_id', mysql.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['category_id'], ['categories.id'], name=op.f('fk_post_categories_category_id'), onupdate='CASCADE', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['post_id'], ['posts.id'], name=op.f('fk_post_categories_post_id'), onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    mysql_collate='utf8mb4_unicode_ci',
    mysql_default_charset='utf8mb4',
    mysql_engine='InnoDB'
    )
    with op.batch_alter_table('post_categories', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('unique_post_category'), ['post_id', 'category_id'], unique=True)
        batch_op.create_index(batch_op.f('idx_post_id'), ['post_id'], unique=False)
        batch_op.create_index(batch_op.f('idx_category_id'), ['category_id'], unique=False)

    op.create_table('app_settings',
    sa.Column('id', mysql.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('key_name', mysql.VARCHAR(collation='utf8mb4_unicode_ci', length=100), nullable=False),
    sa.Column('value', mysql.TEXT(collation='utf8mb4_unicode_ci'), nullable=True),
    sa.Column('description', mysql.TEXT(collation='utf8mb4_unicode_ci'), nullable=True),
    sa.Column('created_at', mysql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True),
    sa.Column('updated_at', mysql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP'), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    mysql_collate='utf8mb4_unicode_ci',
    mysql_default_charset='utf8mb4',
    mysql_engine='InnoDB'
    )
    with op.batch_alter_table('app_settings', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('key_name'), ['key_name'], unique=True)
        batch_op.create_index(batch_op.f('idx_key_name'), ['key_name'], unique=False)

    # ### end Alembic commands ###
